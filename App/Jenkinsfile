pipeline {
  agent any

  environment {
    DOCKER_IMAGE = "gglaros/app"
    TAG = "latest"
    // αφαιρούμε το KUBECONFIG από εδώ
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build App') {
      steps {
        sh 'mvn clean package -DskipTests'
      }
    }

    stage('Build Docker Image') {
      steps {
        sh "docker build -f test.dockerfile -t $DOCKER_IMAGE:$TAG ."
      }
    }

    stage('Push to Docker Hub') {
      steps {
        withCredentials([usernamePassword(
          credentialsId: 'dockerhub-creds',
          usernameVariable: 'DOCKER_USER',
          passwordVariable: 'DOCKER_PASS'
        )]) {
          sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'
          sh "docker push $DOCKER_IMAGE:$TAG"
        }
      }
    }

    stage('Deploy to Kubernetes') {
      steps {
        // εδώ φορτώνουμε το kubeconfig ως file και θέτουμε τη μεταβλητή περιβάλλοντος
        withCredentials([file(
          credentialsId: 'kubeconfig',
          variable: 'KUBECONFIG'
        )]) {
          sh 'kubectl apply -f kubernetes/'
        }
      }
    }
  }
}
